# '-' —Ñ—É–Ω–∫—Ü–∏–∏
import keyboard
import ctypes
from ctypes import wintypes
import time
import pyperclip
def load_keyboard_layout(layout):
    user32 = ctypes.WinDLL('user32')
    KLF_ACTIVATE = 1  # Activate layout
    WM_INPUTLANGCHANGEREQUEST = 0x0050  # Message for changing layout
    HWND_BROADCAST = 0xFFFF  # Send message to all windows
    # Load keyboard layout if not loaded yet
    if layout not in LAYOUT_HANDLES:
        LAYOUT_HANDLES[layout] = user32.LoadKeyboardLayoutW(layout, KLF_ACTIVATE)
    layout_handle = LAYOUT_HANDLES[layout]
    # Get the active window
    hwnd = user32.GetForegroundWindow()

    # Get the window name
    length = user32.GetWindowTextLengthW(hwnd)
    buff = ctypes.create_unicode_buffer(length + 1)
    user32.GetWindowTextW(hwnd, buff, length + 1)

    # If the active window is not MS Word, send the message
    if "Microsoft Word" not in buff.value:
        user32.PostMessageW(hwnd, WM_INPUTLANGCHANGEREQUEST, 0, layout_handle)
def print_pressed_keys(e):
    global pred  # –ø–∞–º—è—Ç–∫–∞ –æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Å–æ–±—ã—Ç–∏–∏ –Ω–∞–∂–∞—Ç–∏—è
    global rdy  # —Å—á–µ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π

    global svst  # –ø—É–ª –¥–ª—è —Ä–∞–∑–±–∏—Ç—ã—Ö –≤—Å—Ç–∞–≤–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ, !!—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–ª–∞–≤–∏—à –≤—Å—Ç–∞–≤–∫–∏
    global svst1  # —Å—á–µ—Ç—á–∏–∫ —é–∑–∞ —Ä–∞–∑–±–∏—Ç—ã—Ö –≤—Å—Ç–∞–≤–æ–∫
    global svval # —Å–ª–æ–≤–∞—Ä—å —Ä–∞–∑–± –≤—Å—Ç–∞–≤–æ–∫
    global svms  # –º–µ—Ç–∫–∞ —Å—Ç–∞—Ç—É—Å–∞

    if not (ctypes.WinDLL('user32').GetKeyState(0x90) & 1):  # –Ω–∞–º–ª–æ–∫–æ–≤—ã–π –æ—Ç–±–æ–π –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –æ–Ω –Ω–µ—á–∞—è–Ω–Ω–æ –≤–∫–ª—é—á–∏—Ç—Å—è
        ctypes.WinDLL('user32').keybd_event(0x90, 0, 0, 0)
        ctypes.WinDLL('user32').keybd_event(0x90, 0, 0x0002, 0)

    try:
        _ = svms
    except NameError:
        svms = 0
    #print(e, e.event_type, e.name)  # KeyboardEvent(right alt down) down right alt–∞hh–∞–∞—Ä–∞f
    if rdy == 2 and e.name in d:
        if str(d.get(e.name))[0] == "-":  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∑–æ–≤–∞ –¥–æ–ø –æ–ø—Ü–∏–π –≤–º–µ—Å—Ç–æ –≤–≤–æ–¥–∞
            if str(d.get(e.name)) == "-–∞–Ω–≥–ª":  # —Ä–∞—Å–∫–ª–∞–¥–∫–∏
                keyboard.press_and_release('backspace')
                load_keyboard_layout(ENGLISH_LAYOUT)
            if str(d.get(e.name)) == "-—Ä—É—Å":
                keyboard.press_and_release('backspace')
                load_keyboard_layout(RUSSIAN_LAYOUT)
            if str(d.get(e.name)) == "-–∑–∞–º–µ–Ω–∞":
                keyboard.press_and_release('backspace')
                m = pyperclip.paste()
                m = m.translate(trans_table)
                pyperclip.copy(m)
            if str(d.get(e.name)) == '-–∫–∞—Å–∫–∞–¥–≤—Å—Ç–∞–≤–∫–∞':  # —Å—ä–µ–¥–µ–Ω–∏–µ –Ω–∞ –≤—Å—Ç–∞–≤–∫—É ùíπ ‡≤Ω ·ë∂ –≥ ·ëª ·öã ùû∑ ùúï l i r „Å∏ œâ N v L I „Åè ƒø ùôπ êåô „ÇΩ ‡´™ êíá ùû∑ „Çë II ∆è „ÉÅ „ÇÉ
                svst = pyperclip.paste()
                if not svst == "":
                    svst1 = 0
                    svval = svst.split('\n')
                    pyperclip.copy(svval[svst1])
                    if len(svval) > 1:
                        svms = 5
                    print("—Å—ä–µ–¥–µ–Ω–æ")
        else:  # –ø—Ä–æ—Å—Ç–æ –≤–≤–æ–¥
            keyboard.press_and_release('backspace')
            keyboard.write(d.get(e.name))
        rdy = 0
    if e.name == "insert" and svms == 5 and e.event_type == "down" and pred.name == "right shift":# –ª–æ–≤–∏–º —Ä–∞–∑–± –≤—Å—Ç–∞–≤–∫—É –¥–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è
        svst1 = svst1+1
        if len(svval) <= svst1-1:
            svst1 = 0
        pyperclip.copy(svval[svst1])
    if e.name == "insert" and e.event_type == "down" and pred.name == "right ctrl":  # –ª–æ–≤–∏–º —Ä–∞–∑–± –≤—Å—Ç–∞–≤–∫—É –¥–ª—è —á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è
        svms = 0
    if e.event_type == "up" and (e.name == knopnadopt1 or e.name == knopnadopt2) and rdy == 1:  # –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–∂–∞—Ç–∏—è –∫–æ–º–∞–Ω–¥—ã
        rdy = 2
    else:
        rdy = 0
    if e.event_type == "down" and (e.name == knopnadopt1 or e.name == knopnadopt2):
        rdy = 1
    #if e.event_type == "up" and pred.name == "right ctrl":#and e.name == "insert"
    #    keyboard.send('ctrl+c')
    #    print("found")

    pred = e
rdy = 0
# —Å–ª–æ–≤–∞—Ä—å —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å–ø–µ—Ü
d = {'1': "¬´¬ª", '2': '"', '3': "#", '4': ";", '5': "$", '6': ":", '7': "&", "—Ä": "-—Ä—É—Å", "h": "-—Ä—É—Å", "f": "-–∞–Ω–≥–ª",
     "–∞": "-–∞–Ω–≥–ª", '—ç': "'", "'": "'", '—é': ">", '.': ">", '–±': "<", ',': "<", '/': ",", '—Ö': "[", '[': "[", '—ä': "]",
     ']': "]", '–∂': ":", ';': ":", '`': "-–∑–∞–º–µ–Ω–∞", '—ë': "-–∑–∞–º–µ–Ω–∞", 'right ctrl': '-–∫–∞—Å–∫–∞–¥–≤—Å—Ç–∞–≤–∫–∞'}
# —Å–ª–æ–≤–∞—Ä—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
alf = {'q': "–π", 'w': "—Ü", 'e': "—É", 'r': "–∫", 't': "–µ", 'y': "–Ω", 'u': "–≥", 'i': "—à", 'o': "—â", 'p': "–∑", '[': "—Ö",
       ']': "—ä", 'a': "—Ñ", 's': "—ã", 'd': "–≤", 'f': "–∞", 'g': "–ø", 'h': "—Ä", 'j': "–æ", 'k': "–ª", 'l': "–¥", ';': "–∂",
       "'": "—ç", 'z': "—è", 'x': "—á", 'c': "—Å", 'v': "–º", 'b': "–∏", 'n': "—Ç", 'm': "—å", ',': "–±", '.': "—é", '/': ".",
       '–π': "q", '—Ü': "w", '—É': "e", '–∫': "r", '–µ': "t", '–Ω': "y", '–≥': "u", '—à': "i", '—â': "o", '–∑': "p", '—Ö': "[",
       '—ä': "]", '—Ñ': "a", '—ã': "s", '–≤': "d", '–∞': "f", '–ø': "g", '—Ä': "h", '–æ': "j", '–ª': "k", '–¥': "l", '–∂': ";",
       '—ç': "'", '—è': "z", '—á': "x", '—Å': "c", '–º': "v", '–∏': "b", '—Ç': "n", '—å': "m", '–±': ",", '—é': ".", '&': "?"}
trans_table = str.maketrans(alf)  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–≤–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ maketrans().
RUSSIAN_LAYOUT = '00000419'
ENGLISH_LAYOUT = '00000409'
LAYOUT_HANDLES = {}
knopnadopt1 = "right shift"  # right alt –ó–∞–¥–≤–æ–µ–Ω–∏–µ –ø–æ —Å–ª—É—á–∞—é —Ä–∞–∑–Ω—ã—Ö –Ω–∞–∑—ã–≤–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–∫–∞—Ö
knopnadopt2 = "right shift"  # alt gr
keyboard.hook(print_pressed_keys)  # KeyboardEvent(down up) up down
keyboard.wait()
